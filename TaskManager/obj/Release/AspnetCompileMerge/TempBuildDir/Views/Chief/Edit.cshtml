@using TaskManager.Helpers
@model TaskManager.Models.ChiefTaskEditViewModel
@{
    ViewBag.Title = "Управление заявкой";
    Layout = "~/Views/RootLayout.cshtml";
}
<div class="container">
    @using (Html.BeginForm("Edit", "Chief", FormMethod.Post))
    {
        @Html.ValidationSummary(true)
        @Html.HiddenFor(x => x.TaskId)
        @Html.HiddenFor(x => x.TaskText)
        <div class="col-md-8">
            <div class="task-text-view">
                <h4>Заявка #@Model.TaskId</h4>
                @Model.TaskText
            </div>

            @if (!Model.CompleteDate.HasValue)
            {
                <div class="col-md-12 padding-0 v-align-bottom">
                    <div class="v-align-bottom col-md-3 padding-0">
                        @Html.DropDownGroupFor(x => x.RecipientId, Model.RecipientsList, "Исполнитель", "recipDropDownId", "recipGroupId", false, true)
                    </div>
                    <div class="v-align-bottom col-md-3">
                        @Html.DatePickerGroupFor(x => x.Deadline, "Срок исполнения", "deadline-id", "Срок исполнения", true)
                    </div>
                    <div class="v-align-bottom col-md-3 padding-0">
                        @Html.DropDownGroupFor(x => x.PriorityId, Model.PrioritiesList, "Приоритет", "priorityId", "priorityGroupId", false, true)
                    </div>
                    <div class="v-align-bottom col-md-3 right padding-0" style="line-height: 53px">
                        <button type="submit" class="btn btn-primary btn">
                            <span class="glyphicon glyphicon-floppy-save"></span>Сохранить
                        </button>
                    </div>
                </div>
            }
            
            <div class="margin-top-110">
                <div id="comments-update-panel"></div>
                <form method="POST" action="#">
                    @Html.ValidationSummary(true)
                    @Html.TextAreaGroupFor(x => x.NewComment, string.Empty, "new-comment-id", "Новый комментарий к заявке", 120)
                    <div class="right">
                        <button type="button" class=" btn btn-primary" onclick="addNewComment()">Отправить</button>
                    </div>
                </form>
                
            </div>
        </div>
    }
        <div class="col-md-4 margin-top-30">
            <div class="panel-group" id="accordion">
                <div class="panel panel-default">
                    <div class="panel-heading">
                        <h5 class="panel-title">
                            <a data-toggle="collapse" data-parent="#accordion" href="#details">Подробно</a>
                        </h5>
                    </div>
                    <div id="details" class="panel-collapse collapse in">
                        <div class="panel-body">
                            <p>Заявка подана: @Model.CreationDate.ToString(ModelHelper.DateTimeFormatFull)</p>
                            <p>Отправитель: @Model.SenderName</p>
                            @if (Model.RecipientId != "0")
                            {
                                <p>Исполнитель: @Model.RecipientName</p>
                                <p>Исполнитель назначен: @Model.AssignDate</p>
                                <p>Установлен срок выполнения до: @Model.Deadline</p>
                                <p>Приоритет выполнения: @Model.PriorityName</p>
                            }
                            @if (Model.CompleteDate != null)
                            {
                                <p>Заявка выполнена: @Model.CompleteDate.Value.ToString(ModelHelper.DateTimeFormatFull)</p>
                            }


                        </div>
                    </div>
                </div>
            </div>
        </div>
    
</div>
<script type="text/javascript">
    function addNewComment() {
        $.ajax({
            url: '@Url.Action("AddNewComment", "Comment")',
                    type: "POST",
                    data: JSON.stringify({
                        text: $('#new-comment-id').val(),
                        authorId: @WebSecurity.CurrentUserId,
                taskId: @Model.TaskId
                }),
                    contentType: 'application/json; charset=utf-8',
                    accepts: 'application/json',
                    success: function(data) {
                        if(data.result == "success") {
                            switchValidationErrorFor(false, "NewComment", "");
                            $('#new-comment-id').val('');
                            commentsUpdate();
                            scrollToNewComment();
                        } else if (data.result == "maxLenghtError") {
                            switchValidationErrorFor(true, "NewComment", data.message);
                        } else {
                            switchValidationErrorFor(false, "NewComment", "");
                        }
                    },
                    complete: function() {

                    },
                    error: function() {
                        alert('Произошла ошибка при создании комментария');
                    }
                });
    }
    
    function switchValidationErrorFor(isError, property, errorMessage) {
        if(isError){
            $("span[data-valmsg-for='" + property + "']").removeClass("field-validation-valid");
            $("span[data-valmsg-for='" + property + "']").addClass("field-validation-error");
            $("span[data-valmsg-for='" + property + "']").html(errorMessage);
        } else {
            $("span[data-valmsg-for='" + property + "']").html("");
            $("span[data-valmsg-for='" + property + "']").removeClass("field-validation-error");
            $("span[data-valmsg-for='" + property + "']").addClass("field-validation-valid");
        }
    }

    function scrollToNewComment() {
        var target = $('.thread-item-sent:last');
        if (target.length) {
            $('html,body').animate({
                scrollTop: target.offset().top
            }, 1000);
        }
    }

    function commentsUpdate() {
        $.ajax({
            url: '@Url.Action("GetCommentsForTask", "Comment")',
            data: { taskId: '@Model.TaskId' },
            success: function (data) {
                $('#comments-update-panel').html(data);
            },
            complete: function () {
                setTimeout(commentsUpdate, upd_interval);
            }
        });
    }

    $(function() {
        commentsUpdate();
    });
</script>
