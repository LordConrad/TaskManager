@model IEnumerable<TaskManager.Models.Task>
@{
    ViewBag.Title = "Статистика";
    Layout = "~/Views/RootLayout.cshtml";
}
<script type="text/javascript" src="@Url.Content("../../Scripts/Chart.js")"></script>
<script type="text/javascript" src="@Url.Content("../../Scripts/knockout-3.3.0.js")"></script>
<script type="text/javascript">

    var viewModel = {
        selectedYear: ko.observable("2015"),
        chartData: ko.observableArray([]),
        lineChartData: ko.observable()
    };
    
    var tasks = Array();
    @foreach (var task in @Model)
    {
        @:tasks.push({ acceptDate: parseDate("@task.AcceptCpmpleteDate"), recipient: "@task.TaskRecipient.UserName", recipientFullName: "@task.TaskRecipient.UserFullName" })
    }

    function chartDataUpdate() {
        viewModel.chartData([]);
        for (var i = 0; i < 12; i++) {
            viewModel.chartData.push(select(viewModel.selectedYear(), i));
        }
        viewModel.lineChartData({
            labels: ['Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь',
                'Июль', 'Август', 'Сентябрь', 'Октябрь', 'Ноябрь', 'Декабрь'],
            datasets: [
                {
                    label: "Выполненные заявки",
                    fillColor: "rgba(220,220,220,0.2)",
                    strokeColor: "rgba(220,220,220,1)",
                    pointColor: "rgba(220,220,220,1)",
                    pointStrokeColor: "#fff",
                    pointHighlightFill: "#fff",
                    pointHighlightStroke: "rgba(220,220,220,1)",
                    data: viewModel.chartData()
                }
            ]
        });
        var ctx = document.getElementById("statisticChart").getContext("2d");
        window.myLine = new Chart(ctx).Line(viewModel.lineChartData(), {
            responsive: true
        });
    }

    function select(year, month, user) {
        var count = 0;
        for (var i = 0; i < tasks.length; i++) {
            if (year != undefined && month != undefined && user != undefined) {
                if (tasks[i].acceptDate.getFullYear() == year
                    && tasks[i].acceptDate.getMonth() == month
                    && tasks[i].recipient == user) {
                    count++;
                }
            }
            if (year != undefined && month != undefined && user == undefined) {
                if (tasks[i].acceptDate.getFullYear() == year
                    && tasks[i].acceptDate.getMonth() == month) {
                    count++;
                }
            }
            if (year != undefined && month == undefined && user != undefined) {
                if (tasks[i].acceptDate.getFullYear() == year
                    && tasks[i].recipient == user) {
                    count++;
                }
            }
            if (year != undefined && month == undefined && user == undefined) {
                if (tasks[i].acceptDate.getFullYear() == year) {
                    count++;
                }
            }
            if (year == undefined && month == undefined && user != undefined) {
                if (tasks[i].recipient == user) {
                    count++;
                }
            }
            if (year == undefined && month != undefined && user == undefined) {
                if (tasks[i].acceptDate.getMonth() == month) {
                    count++;
                }
            }
            if (year == undefined && month != undefined && user != undefined) {
                if (tasks[i].acceptDate.getMonth() == month
                    && tasks[i].recipient == user) {
                    count++;
                }
            }
        }
        return count;
    }

    

    function parseDate(strDate) {
        var dateParts = strDate.split(/[\s\.]/);
        var date = new Date(dateParts[2], (dateParts[1] - 1), dateParts[0]);
        return date;
    }

    $(function () {
        chartDataUpdate();
        
        
        ko.applyBindings();
    });

</script>

<div class="container">
    <h4 class="center">Статистика выполнения заявок</h4>
    <div class="center">
        <div class="btn-group" role="group">
            <button data-bind="click: function () { viewModel.selectedYear('2014'); chartDataUpdate(); }, css: { active: viewModel.selectedYear() == '2014' }" type="button" class="btn btn-default">2014</button>
            <button data-bind="click: function () { viewModel.selectedYear('2015'); chartDataUpdate(); }, css: { active: viewModel.selectedYear() == '2015' }" type="button" class="btn btn-default">2015</button>
        </div>
    </div>
    <canvas id="statisticChart" height="200" width="400"></canvas>
</div>
