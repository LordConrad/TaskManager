@using TaskManager.Helpers
@model TaskManager.Models.NewTaskViewModel

@{
    ViewBag.Title = "Редактирование заявки";
    Layout = "~/Views/Sender/SenderLayout.cshtml";
}
@if (Model.IsReadOnly)
{
    
    <div class="container">
        <div class="col-md-8">
            <div class="task-text-view">
                <h4>Заявка #@Model.TaskId</h4>
                @Model.TaskText
            </div>

            @if (Model.IsComlete)
            {
                <div class="task-text-view">
                    <h4>Результат выполнения</h4>
                    @(!string.IsNullOrEmpty(Model.ResultComment) ? Html.Raw("выполнено") : Html.Raw(Model.ResultComment))
                    <div class="right">
                        <button onclick="location.href='@Url.Action("ConfirmTask", new { id = Model.TaskId })'" class="btn btn-primary" id="confirm-btn">Подтвердить выполнение</button>
                    </div>
                </div>
            }
            @Html.Partial("~/Views/CommentsView.cshtml", Model)


        </div>
        <div class="col-md-4 margin-top-30">
            <div class="panel-group" id="accordion">
                <div class="panel panel-default">
                    <div class="panel-heading">
                        <h5 class="panel-title">
                            <a data-toggle="collapse" data-parent="#accordion" href="#details">Подробно</a>
                        </h5>
                    </div>
                    <div id="details" class="panel-collapse collapse in">
                        <div class="panel-body">
                            <p>Заявка подана: @Model.CreationDate</p>
                            <p>Ответственный: @Model.RecipientName</p>
                            @if (!string.IsNullOrEmpty(@Model.AssignDate))
                            {
                                <p>Ответственный назначен: @Model.AssignDate</p>
                            }
                            @if (!string.IsNullOrEmpty(@Model.Deadline))
                            {
                                <p>Установлен срок выполнения до: @Model.Deadline</p>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    
}
else
{
    <div class="container">
        <div class="col-md-12">
            <h4 class="center">Редактирование заявки</h4>
            <form role="form" method="POST">
                @Html.TextAreaGroupFor(x => x.TaskText, "Текст заявки", "task-text", "Текст заявки")
                <div style="text-align: right;">
                    <button type="button" class="btn btn-danger margin-right-15" data-toggle="modal" data-target="#modal-window" data-href = '@Url.Action("Delete", new { taskId = Model.TaskId })'>Удалить</button>
                    <button type="submit" class="btn btn-primary" >Сохранить</button>
                </div>
            </form>
            @Html.Partial("~/Views/CommentsView.cshtml", Model)
        </div>
    </div>
}

<div class="modal fade" id="modal-window" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">&times;</span><span class="sr-only">Close</span></button>
                <h4 class="modal-title" id="myModalLabel">Подтверждение действия</h4>
            </div>
            <div class="modal-body">
                Вы действительно хотите удалить заявку?
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Отмена</button>
                <a href="#" class="btn btn-danger danger">Удалить</a>
            </div>
        </div>
    </div>
</div>

<script type="text/javascript">
    // вешаем удаление на кнопку модального окна
    $(document).ready(function () {
        $('#modal-window').on('show.bs.modal', function (e) {
            $(this).find('.danger').attr('href', $(e.relatedTarget).data('href'));
        });
    });



    function switchValidationErrorFor(isError, property, errorMessage) {
        if (isError) {
            $("span[data-valmsg-for='" + property + "']").removeClass("field-validation-valid");
            $("span[data-valmsg-for='" + property + "']").addClass("field-validation-error");
            $("span[data-valmsg-for='" + property + "']").html(errorMessage);
        } else {
            $("span[data-valmsg-for='" + property + "']").html("");
            $("span[data-valmsg-for='" + property + "']").removeClass("field-validation-error");
            $("span[data-valmsg-for='" + property + "']").addClass("field-validation-valid");
        }
    }




</script>
